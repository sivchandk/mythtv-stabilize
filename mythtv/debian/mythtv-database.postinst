#!/bin/sh -e

escape_quotes() {
    cat <<EOF | sed -e "s/'/\\\\'/g"
$1
EOF
}

#Used to fail at some point but not abort postinst
fail_database() {
    echo "Failed to create or modify database (incorrect admin username/password?)" >&2
    echo "Try:" >&2
    echo "sudo dpkg-reconfigure mythtv-database" >&2

    db_set mythtv/mysql_admin_password ""
    exit 0
}


DoSQL() {
    local host="$1"
    local admin_username="$2"
    local admin_password="$3"
    local database="$4"
    local statement="`escape_quotes \"$5\"`"
    local tmp=`tempfile -m 600`
	cat <<EOF >$tmp
$admin_password
EOF
    perl -e "
use DBI;
chomp(\$password=<>);
@statements=split(/;/, '$statement');
\$db = DBI->connect('dbi:mysql:host=$host;database=$database',
		    '$admin_username', \$password,
		    { PrintError => 0 }) || die 'Failed to connect to database: ' . \$DBI::errstr;
for \$s (@statements) { \$db->do(\$s) || die 'Failed to execute SQL: ' . \$s . '\n' . \$DBI::errstr; }
" < $tmp
    ret=$?
    rm -f $tmp
    return $ret
}

MYTHSQL=/usr/share/mythtv/mythsql

case "$1" in
    configure)
	. /usr/share/debconf/confmodule

	db_get mythtv/mysql_admin_user
	admin_username="$RET"
	db_get mythtv/mysql_admin_password
	admin_password="$RET"

	db_get mythtv/mysql_host
	hostname="$RET"	

	if test -z "$hostname"; then
	    hostname=localhost
	fi

	db_get mythtv/mysql_mythtv_dbname
	database="$RET"

	if ! DoSQL "$hostname" "$admin_username" "$admin_password" "$database" "SELECT NULL" 2>/dev/null; then
	    i=1
	    while ! DoSQL "$hostname" "$admin_username" "$admin_password" "" "CREATE DATABASE $database"; do
	    if [ $i -ge 5 ]; then
		echo "Failed to create database (incorrect admin username/password?)" >&2
		echo "It's also possible that mysql-server wasn't running.  After install" >&2
		echo "is completed, you will need to make sure mysql-server is running" >&2
		echo "and that you supplied correct information. Try:" >&2
		echo "sudo dpkg-reconfigure mythtv-database" >&2
		exit 0
	    fi
	    db_input high mythtv/mysql_host || true
	    db_input high mythtv/mysql_admin_user || true
	    db_input high mythtv/mysql_admin_password || true
	    db_go || true
	    db_get mythtv/mysql_host
	    hostname="$RET"
	    db_get mythtv/mysql_admin_user
	    admin_username="$RET"
	    db_get mythtv/mysql_admin_password
	    admin_password="$RET"
	    if [ "$admin_password" != "" ]; then
		admin_password="-p$admin_password"
	    fi	
	    DoSQL "$hostname" "$admin_username" "$admin_password" "$database" "SELECT NULL"
	    i=$(($i+1))
	    done
	fi

	db_get mythtv/mysql_mythtv_user
	mythtv_username="$RET"
	db_get mythtv/mysql_mythtv_password
	mythtv_password="$RET"

	DoSQL "$hostname" "$admin_username" "$admin_password" "$database" \
	    "GRANT ALL PRIVILEGES ON $database.* TO $mythtv_username@localhost IDENTIFIED BY '$mythtv_password'"

	DoSQL "$hostname" "$admin_username" "$admin_password" "$database" \
	    "GRANT ALL PRIVILEGES ON $database.* TO $mythtv_username@'%' IDENTIFIED BY '$mythtv_password'"

	# Upgrades from old versions where the database was not
	# automatically upgraded (pre-0.12)

	if test -n "$2" && dpkg --compare-versions "$2" lt 0.8-1; then
	    $MYTHSQL < /usr/share/mythtv/sql/0-7-to-0-8.sql
	fi
	
	if test -n "$2" && dpkg --compare-versions "$2" lt 0.9-1; then
	    $MYTHSQL < /usr/share/mythtv/sql/0-8-to-0-9.sql
	fi
	
	if test -n "$2" && dpkg --compare-versions "$2" lt 0.10-1; then
	    $MYTHSQL < /usr/share/mythtv/0.9-to-0.10.sql
	fi
	
	if test -n "$2" && dpkg --compare-versions "$2" lt 0.11-1; then
	    $MYTHSQL < /usr/share/mythtv/sql/0.10-to-0.11.sql
	fi

       if dpkg --compare-versions "$2" lt 0.26 && test -x /usr/bin/mysql; then
           if ! mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host=$hostname --user=$admin_username -p$admin_password mysql >/dev/null 2>&1; then
               fail_database
           fi
       fi


	;;

    abort-upgrade|abort-remove|abort-deconfigure)

	;;

    *)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

#DEBHELPER#

exit 0
